Search.setIndex({"docnames": ["NeuroConn", "NeuroConn.data", "NeuroConn.gradient", "NeuroConn.preprocessing", "index", "modules"], "filenames": ["NeuroConn.rst", "NeuroConn.data.rst", "NeuroConn.gradient.rst", "NeuroConn.preprocessing.rst", "index.rst", "modules.rst"], "titles": ["NeuroConn package", "NeuroConn.data package", "NeuroConn.gradient package", "NeuroConn.preprocessing package", "Welcome to NeuroConn\u2019s documentation!", "PyConn"], "terms": {"data": [0, 2, 5], "submodul": [0, 5], "example_dataset": [0, 5], "fetch_example_data": [0, 1], "unzip_and_delet": [0, 1], "gradient": [0, 5], "align_gradi": [0, 2], "get_gradi": [0, 2], "preprocess": [0, 5], "fmripreppeddataset": [0, 2, 3], "clean_sign": [0, 3], "get_confound": [0, 3], "get_conn_matrix": [0, 3], "get_sess": [0, 3], "get_ts_path": [0, 3], "parcel": [0, 2, 3], "rawdataset": [0, 3], "data_descript": [0, 3], "docker_fmriprep": [0, 3], "name": [0, 1, 2, 3], "participant_data": [0, 3], "subject": [0, 2, 3], "z_transform_conn_matrix": [0, 3], "gdrive_url": 1, "http": 1, "drive": 1, "googl": 1, "com": 1, "file": [1, 2, 3], "d": 1, "1ijrystmmsjmmqcm9thovf_dmyl9gfcv6": 1, "view": 1, "usp": 1, "share_link": 1, "output_nam": 1, "example_data": 1, "sourc": [1, 2, 3], "download": 1, "extract": [1, 2], "exampl": 1, "from": [1, 2, 3], "url": 1, "paramet": [1, 2, 3], "str": [1, 2, 3], "option": [1, 2, 3], "The": [1, 2, 3], "default": [1, 2, 3], "i": [1, 2, 3], "defin": 1, "function": 1, "output": 1, "return": [1, 2, 3], "path": [1, 2, 3], "type": [1, 2, 3], "file_path": 1, "output_dir": 1, "user": 1, "victoriashevchenko": 1, "opt": 1, "miniconda3": 1, "env": 1, "neuro": 1, "lib": 1, "python3": 1, "9": 1, "site": 1, "zip": 1, "specifi": [1, 3], "directori": [1, 3], "delet": 1, "script": 1, "none": [1, 2, 3], "n_compon": 2, "custom_ref": 2, "arg": 2, "align": 2, "refer": 2, "set": 2, "us": [2, 3], "procrust": 2, "numpi": [2, 3], "ndarrai": [2, 3], "int": [2, 3], "number": [2, 3], "compon": 2, "If": [2, 3], "marguli": 2, "et": 2, "al": 2, "2016": 2, "addit": 2, "argument": 2, "pass": 2, "procrustesalign": 2, "task": [2, 3], "schaefer": [2, 3], "n_parcel": [2, 3], "1000": [2, 3], "kernel": 2, "cosin": 2, "approach": 2, "pca": 2, "from_mat": 2, "true": [2, 3], "save": [2, 3], "save_to": [2, 3], "comput": [2, 3], "connect": [2, 3], "matrix": [2, 3], "object": [2, 3], "id": [2, 3], "rest": [2, 3], "bool": [2, 3], "whether": [2, 3], "load": 2, "mat": 2, "class": 3, "bids_path": 3, "base": 3, "attribut": 3, "method": 3, "gsr": 3, "fals": 3, "clean": 3, "time": 3, "seri": 3, "given": 3, "global": 3, "signal": 3, "regress": 3, "shape": 3, "n_session": 3, "n_volum": 3, "np": 3, "no_nan": 3, "pick_confound": 3, "list": 3, "confound": 3, "imput": 3, "nan": 3, "pick": 3, "datafram": 3, "A": 3, "subject_t": 3, "concat_t": 3, "z_transform": 3, "concaten": 3, "e": 3, "g": 3, "sever": 3, "session": 3, "avail": 3, "appli": 3, "fisher": 3, "": 3, "z": 3, "transform": 3, "ha": 3, "an": 3, "empti": 3, "label": 3, "retriev": 3, "ts_path": 3, "parc_ts_list": 3, "properti": 3, "fs_license_path": 3, "skip_bids_valid": 3, "fs_reconal": 3, "mem": 3, "5000": 3, "run": 3, "fmriprep": 3, "pipelin": 3, "docker": 3, "contain": 3, "particip": 3, "process": 3, "skip": 3, "bid": 3, "valid": 3, "full": 3, "freesurf": 3, "licens": 3, "recon": 3, "all": 3, "amount": 3, "memori": 3, "alloc": 3, "mb": 3, "conn_matrix": 3, "pyconn": 4, "packag": [4, 5], "index": 4, "modul": [4, 5], "search": 4, "page": 4, "neuroconn": 5, "subpackag": 5, "content": 5}, "objects": {"": [[0, 0, 0, "-", "NeuroConn"]], "NeuroConn": [[1, 0, 0, "-", "data"], [2, 0, 0, "-", "gradient"], [3, 0, 0, "-", "preprocessing"]], "NeuroConn.data": [[1, 0, 0, "-", "example_datasets"]], "NeuroConn.data.example_datasets": [[1, 1, 1, "", "fetch_example_data"], [1, 1, 1, "", "unzip_and_delete"]], "NeuroConn.gradient": [[2, 0, 0, "-", "gradient"]], "NeuroConn.gradient.gradient": [[2, 1, 1, "", "align_gradients"], [2, 1, 1, "", "get_gradients"]], "NeuroConn.preprocessing": [[3, 0, 0, "-", "preprocessing"]], "NeuroConn.preprocessing.preprocessing": [[3, 2, 1, "", "FmriPreppedDataSet"], [3, 2, 1, "", "RawDataset"], [3, 1, 1, "", "z_transform_conn_matrix"]], "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet": [[3, 3, 1, "", "clean_signal"], [3, 3, 1, "", "get_confounds"], [3, 3, 1, "", "get_conn_matrix"], [3, 3, 1, "", "get_sessions"], [3, 3, 1, "", "get_ts_paths"], [3, 3, 1, "", "parcellate"]], "NeuroConn.preprocessing.preprocessing.RawDataset": [[3, 4, 1, "", "data_description"], [3, 3, 1, "", "docker_fmriprep"], [3, 4, 1, "", "name"], [3, 4, 1, "", "participant_data"], [3, 4, 1, "", "subjects"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"neuroconn": [0, 1, 2, 3, 4], "packag": [0, 1, 2, 3], "subpackag": 0, "modul": [0, 1, 2, 3], "content": [0, 1, 2, 3, 4], "data": 1, "submodul": [1, 2, 3], "example_dataset": 1, "gradient": 2, "preprocess": 3, "welcom": 4, "": 4, "document": 4, "indic": 4, "tabl": 4, "pyconn": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"NeuroConn package": [[0, "neuroconn-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-NeuroConn"], [1, "module-NeuroConn.data"], [2, "module-NeuroConn.gradient"], [3, "module-NeuroConn.preprocessing"]], "NeuroConn.data package": [[1, "neuroconn-data-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"]], "NeuroConn.data.example_datasets module": [[1, "module-NeuroConn.data.example_datasets"]], "NeuroConn.gradient package": [[2, "neuroconn-gradient-package"]], "NeuroConn.gradient.gradient module": [[2, "module-NeuroConn.gradient.gradient"]], "NeuroConn.preprocessing package": [[3, "neuroconn-preprocessing-package"]], "NeuroConn.preprocessing.preprocessing module": [[3, "module-NeuroConn.preprocessing.preprocessing"]], "Welcome to NeuroConn\u2019s documentation!": [[4, "welcome-to-neuroconn-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "PyConn": [[5, "pyconn"]]}, "indexentries": {"neuroconn": [[0, "module-NeuroConn"]], "module": [[0, "module-NeuroConn"], [1, "module-NeuroConn.data"], [1, "module-NeuroConn.data.example_datasets"], [2, "module-NeuroConn.gradient"], [2, "module-NeuroConn.gradient.gradient"], [3, "module-NeuroConn.preprocessing"], [3, "module-NeuroConn.preprocessing.preprocessing"]], "neuroconn.data": [[1, "module-NeuroConn.data"]], "neuroconn.data.example_datasets": [[1, "module-NeuroConn.data.example_datasets"]], "fetch_example_data() (in module neuroconn.data.example_datasets)": [[1, "NeuroConn.data.example_datasets.fetch_example_data"]], "unzip_and_delete() (in module neuroconn.data.example_datasets)": [[1, "NeuroConn.data.example_datasets.unzip_and_delete"]], "neuroconn.gradient": [[2, "module-NeuroConn.gradient"]], "neuroconn.gradient.gradient": [[2, "module-NeuroConn.gradient.gradient"]], "align_gradients() (in module neuroconn.gradient.gradient)": [[2, "NeuroConn.gradient.gradient.align_gradients"]], "get_gradients() (in module neuroconn.gradient.gradient)": [[2, "NeuroConn.gradient.gradient.get_gradients"]], "fmripreppeddataset (class in neuroconn.preprocessing.preprocessing)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet"]], "neuroconn.preprocessing": [[3, "module-NeuroConn.preprocessing"]], "neuroconn.preprocessing.preprocessing": [[3, "module-NeuroConn.preprocessing.preprocessing"]], "rawdataset (class in neuroconn.preprocessing.preprocessing)": [[3, "NeuroConn.preprocessing.preprocessing.RawDataset"]], "clean_signal() (neuroconn.preprocessing.preprocessing.fmripreppeddataset method)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet.clean_signal"]], "data_description (neuroconn.preprocessing.preprocessing.rawdataset property)": [[3, "NeuroConn.preprocessing.preprocessing.RawDataset.data_description"]], "docker_fmriprep() (neuroconn.preprocessing.preprocessing.rawdataset method)": [[3, "NeuroConn.preprocessing.preprocessing.RawDataset.docker_fmriprep"]], "get_confounds() (neuroconn.preprocessing.preprocessing.fmripreppeddataset method)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet.get_confounds"]], "get_conn_matrix() (neuroconn.preprocessing.preprocessing.fmripreppeddataset method)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet.get_conn_matrix"]], "get_sessions() (neuroconn.preprocessing.preprocessing.fmripreppeddataset method)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet.get_sessions"]], "get_ts_paths() (neuroconn.preprocessing.preprocessing.fmripreppeddataset method)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet.get_ts_paths"]], "name (neuroconn.preprocessing.preprocessing.rawdataset property)": [[3, "NeuroConn.preprocessing.preprocessing.RawDataset.name"]], "parcellate() (neuroconn.preprocessing.preprocessing.fmripreppeddataset method)": [[3, "NeuroConn.preprocessing.preprocessing.FmriPreppedDataSet.parcellate"]], "participant_data (neuroconn.preprocessing.preprocessing.rawdataset property)": [[3, "NeuroConn.preprocessing.preprocessing.RawDataset.participant_data"]], "subjects (neuroconn.preprocessing.preprocessing.rawdataset property)": [[3, "NeuroConn.preprocessing.preprocessing.RawDataset.subjects"]], "z_transform_conn_matrix() (in module neuroconn.preprocessing.preprocessing)": [[3, "NeuroConn.preprocessing.preprocessing.z_transform_conn_matrix"]]}})